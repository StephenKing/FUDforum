#!/usr/local/bin/php -q
<?php
/***************************************************************************
*   copyright            : (C) 2001,2002 Advanced Internet Designs Inc.
*   email                : forum@prohost.org
*
*   $Id: create_file_list,v 1.6 2003/05/07 18:39:16 hackie Exp $
****************************************************************************
          
****************************************************************************
*
*	This program is free software; you can redistribute it and/or modify
*	it under the terms of the GNU General Public License as published by
*	the Free Software Foundation; either version 2 of the License, or
*	(at your option) any later version.
*
***************************************************************************/

if (!function_exists('file_get_contents')) {
	function file_get_contents($path)
	{
		if (!($fp = fopen($path, 'rb'))) {
			return FALSE;
		}
		$data = fread($fp, filesize($path));
		fclose($fp);

		return $data;
	}
}

function create_file_archive($dir, $pdir)
{
	$data = '';

	if (!($d = opendir($dir))) {
		w_err('cannot access "'.$dir.'"');
	}
	readdir($dp); readdir($dp);
	$path = $dir . '/';
	$dd = str_replace($pdir, '', $dir);
	while ($f = readdir($d)) {
		$ff = $path . $f;
		switch (filetype($ff)) {
			case 'file':
				$fdata = file_get_contents($ff);
				$data .= '//' . $f . '//' . fileperms($ff) . '//' . $dd . '//' . md5($fdata) . '//' . strlen($fdata) . "//\n" . $fdata . "\n";
				break;
			case 'dir':
				$data .= '//' . $f . '//' . fileperms($ff) . '//' . $dd . "//\n";
				$data .= create_file_archive($ff, $pdir);
				break;
		}
	}
	closedir($d);

	return $data;
}

function w_err($msg, $exit=true)
{
	fwrite(STDERR, $msg . "\n"); 
	exit;
}

	if (!defined('STDERR')) {
		define('STDERR', fopen('php://stderr', 'wb'));
	}

	if (!isset($_SERVER['argv'][1]) ) {
		w_err("No Arguments\n\tSyntax: ./create_file_list directory_name");
	} else if (!@is_dir($_SERVER['argv'][1])) {
		w_err("Supplied Argument [".$_SERVER['argv'][1]."] is not a valid directory");
	}

	if (isset($_SERVER['argv'][2]) && !extension_loaded('zlib')) {
		w_err('zlib extension required to compress the archive is not loaded.');
	}	

	$archive = create_file_archive($_SERVER['argv'][1], getcwd());
	$check_sum = md5($archive);
	
	if (isset($_SERVER['argv'][2])) {
		echo $check_sum . str_replace('<?', 'PHP_OPEN_TAG', gzcompress($archive, 9));
	} else {
		echo $check_sum . str_replace('<?', 'RAW_PHP_OPEN_TAG', $archive);
	}	
?>