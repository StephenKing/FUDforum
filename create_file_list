#!/usr/local/bin/php -q
<?php
/***************************************************************************
* copyright            : (C) 2001-2009 Advanced Internet Designs Inc.
* email                : forum@prohost.org
* $Id: create_file_list,v 1.23 2009/07/19 19:27:22 frank Exp $
*
* This program is free software; you can redistribute it and/or modify it 
* under the terms of the GNU General Public License as published by the 
* Free Software Foundation; version 2 of the License, or 
* (at your option) any later version.
***************************************************************************/

function create_file_archive($dir)
{
	$dirs = array(realpath($dir));
	$base = dirname($dirs[0]);
	$data = '';

	while (list(,$v) = each($dirs)) {
		if (!($d = opendir($v))) {
			w_err('cannot access "'.$path.'"');
		}

		$dd = str_replace($base, '', $v);
		if ($dd && ($dd{0} == '/' || $dd{0} == '\\')) {
			$dd = substr($dd, 1);
		}

		while (($f = readdir($d))) {
			if ($f == '.' || $f == '..' || $f == 'CVS') continue;

			if (is_file($v . "/" . $f)) {
				$fdata = file_get_contents($v . "/" . $f);
				if ($f == 'lib.js') {
					// Crude JavaScript compression
					$multiline_comment = '/\/\*(?!-)[\x00-\xff]*?\*\//';
					$fdata = preg_replace($multiline_comment, '', $fdata);
					$singleline_comment = '/[^:]\/\/.*/';
					$fdata = preg_replace($singleline_comment, '', $fdata);
					$extra_space = '/\s+/';
					$fdata = preg_replace($extra_space, ' ', $fdata);
					$removable_space = '/\s?([\{\};\=\(\)\\\/\+\*-])\s?/';
					$fdata = preg_replace('/\s?([\{\};\=\(\)\/\+\*-])\s?/', '\\1', $fdata);
				}
				$data .= '//' . $f . '//0600//' . $dd . '//' . md5($fdata) . '//' . strlen($fdata) . "//\n" . $fdata . "\n";
			} else {
				$data .= '//' . $f . '//0700//' . $dd . "//\n";
				$dirs[] = $v . "/" . $f;
			}
		}
		closedir($d);
	}

	return $data;
}

function w_err($msg, $exit=true)
{
	fwrite(STDERR, $msg . "\n"); 
	exit;
}
	ini_set('memory_limit', '64M');
	set_magic_quotes_runtime(0);

	if (!defined('STDERR')) {
		define('STDERR', fopen('php://stderr', 'wb'));
	}

	if (!isset($_SERVER['argv'][1]) ) {
		w_err("No Arguments\n\tSyntax: ./create_file_list directory_name [use compression]");
	} else if (!@is_dir($_SERVER['argv'][1])) {
		w_err("Supplied Argument [".$_SERVER['argv'][1]."] is not a valid directory");
	}

	if (isset($_SERVER['argv'][2]) && !extension_loaded('zlib')) {
		w_err('The zlib extension that is required to compress the archive is not installed.');
	}	

	$_SERVER['argv'][1] = preg_replace('!/+$!', '', $_SERVER['argv'][1]);

	$archive = create_file_archive($_SERVER['argv'][1]);
	$check_sum = md5($archive);

	$clean = array('<?' => 'PHP_OPEN_TAG', '<%' => 'PHP_OPEN_ASP_TAG');
	
	if (isset($_SERVER['argv'][2])) {
		$a_len = str_pad(strlen($archive), 10, '0', STR_PAD_LEFT);
		echo $check_sum . $a_len . strtr(gzcompress($archive, 9), $clean);
	} else {
		$clean['<?'] = 'RAW_PHP_OPEN_TAG';
		echo $check_sum . strtr($archive, $clean);
	}	
?>
